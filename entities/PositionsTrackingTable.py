from sqlalchemy import Column, Integer, String, Text, Boolean, Enum, Numeric
from config.database.Sqlalchemy import Sqlalchemy
from entities.Enums import InstrumentTypeEnum, TransactionTypeEnum, OrderTypeEnum

class PositionsTrackingTable(Sqlalchemy.base):
    __tablename__ = 'POSITIONS_TRACKING'
    __table_args__ = {'extend_existing': True}

    id = Column('ID', Integer, primary_key=True)
    signal_id = Column('SIGNAL_ID', String)
    signal_group_id = Column('SIGNAL_GROUP_ID', String)
    position_id = Column('POSITION_ID', String)
    position_group_id = Column('POSITION_GROUP_ID', String)
    position_tracking_id = Column('POSITION_TRACKING_ID', String)
    position_tracking_group_id = Column('POSITION_TRACKING_GROUP_ID', String)
    moneyness = Column('MONEYNESS', String)
    symbol = Column('SYMBOL', String)
    expiry_date = Column('EXPIRY_DATE', String)
    strike_price = Column('STRIKE_PRICE', Integer)
    instrument_type = Column('INSTRUMENT_TYPE', Enum(InstrumentTypeEnum))
    transaction_type = Column('TRANSACTION_TYPE', Enum(TransactionTypeEnum))
    order_type = Column('ORDER_TYPE', Enum(OrderTypeEnum))
    contract_type = Column('CONTRACT_TYPE', String)
    num_lots = Column('NUM_LOTS', Integer)
    lot_size = Column('LOT_SIZE', Integer)
    quantity = Column('QUANTITY', Integer)
    is_active = Column('IS_ACTIVE', Boolean, unique=False, default=True)
    is_square_off = Column('IS_SQUARE_OFF', Boolean, unique=False, default=True)
    margin_overall = Column('MARGIN_OVERALL', Numeric)
    entry_price = Column('ENTRY_PRICE', Numeric)
    exit_price = Column('EXIT_PRICE', Numeric)
    current_price = Column('CURRENT_PRICE', Numeric)
    execution_price = Column('EXECUTION_PRICE', Numeric)
    params = Column('PARAMS', Text)
    unrealized_pnl = Column('UNREALIZED_PNL', String)
    realized_pnl = Column('REALIZED_PNL', String)
    unrealized_pnl_group = Column('UNREALIZED_PNL_GROUP', String)
    realized_pnl_group = Column('REALIZED_PNL_GROUP', String)
    net_pnl_overall = Column('NET_PNL_OVERALL', String)
    realized_pnl_overall = Column('REALIZED_PNL_OVERALL', String)
    entry_delta = Column('ENTRY_DELTA', String)
    entry_net_delta = Column('ENTRY_NET_DELTA', String)
    entry_net_delta_overall = Column('ENTRY_NET_DELTA_OVERALL', String)
    current_delta = Column('CURRENT_DELTA', String)
    current_net_delta = Column('CURRENT_NET_DELTA', String)
    current_net_delta_overall = Column('CURRENT_NET_DELTA_OVERALL', String)
    entry_gamma = Column('ENTRY_GAMMA', String)
    entry_net_gamma = Column('ENTRY_NET_GAMMA', String)
    current_gamma = Column('CURRENT_GAMMA', String)
    current_net_gamma = Column('CURRENT_NET_GAMMA', String)
    entry_iv = Column('ENTRY_IV', String)
    entry_iv_diff_pct = Column('ENTRY_IV_DIFF_PCT', String)
    current_iv = Column('CURRENT_IV', String)
    current_iv_diff_pct = Column('CURRENT_IV_DIFF_PCT', String)
    net_delta_threshold = Column('NET_DELTA_THRESHOLD', String)
    entry_theta = Column('ENTRY_THETA', String)
    current_theta = Column('CURRENT_THETA', String)
    entry_net_theta = Column('ENTRY_NET_THETA', String)
    current_net_theta = Column('CURRENT_NET_THETA', String)
    entry_vega = Column('ENTRY_VEGA', String)
    current_vega = Column('CURRENT_VEGA', String)
    entry_net_vega = Column('ENTRY_NET_VEGA', String)
    current_net_vega = Column('CURRENT_NET_VEGA', String)
    contract_expiry_date = Column('CONTRACT_EXPIRY_DATE', String)
    entry_time_to_expiry = Column('ENTRY_TIME_TO_EXPIRY', String)
    current_time_to_expiry = Column('CURRENT_TIME_TO_EXPIRY', String)
    order_manifest = Column('ORDER_MANIFEST', String)
    time_value_options = Column('TIME_VALUE_OPTIONS', String)
    entry_underlying = Column('ENTRY_UNDERLYING', String)
    current_underlying = Column('CURRENT_UNDERLYING', String)
    expected_theta_pnl_pending = Column('EXPECTED_THETA_PNL_PENDING', String)
    current_theta_pnl_pending = Column('CURRENT_THETA_PNL_PENDING', String)
    net_pnl_threshold = Column('NET_PNL_THRESHOLD', String)
    entry_atm_put_price = Column('ENTRY_ATM_PUT_PRICE', Numeric)
    entry_atm_call_price = Column('ENTRY_ATM_CALL_PRICE', Numeric)
    entry_atm_avg_price = Column('ENTRY_ATM_AVG_PRICE', Numeric)
    entry_atm_price_diff = Column('ENTRY_ATM_PRICE_DIFF', Numeric)
    current_price_pnl_pct = Column('CURRENT_PRICE_PNL_PCT', Numeric)
    entry_vix = Column('ENTRY_VIX', Numeric)

